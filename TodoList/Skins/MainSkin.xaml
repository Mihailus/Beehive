<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:TodoList"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:converters="clr-namespace:TodoList.ViewModel.Converters"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="HeaderLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#f3e0e0"></Setter>
        <Setter Property="FontSize" Value="100px"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
    </Style>

    <system:Double x:Key="FilterFontSize">16</system:Double>
    
    <Style x:Key="BoldLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Margin" Value="5,0,0,0"></Setter>
        <Setter Property="FontSize" Value="{StaticResource FilterFontSize}"></Setter>
    </Style>

    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="{StaticResource FilterFontSize}"></Setter>
    </Style>

    <Style TargetType="{x:Type controls:WatermarkedTextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="BorderBrush" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:WatermarkedTextBox}">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" >
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" ></ScrollViewer>
                            <TextBlock x:Name="WatermarkText" Text="{TemplateBinding WatermarkText}" 
                                           Foreground="Gray" Margin="5,0,0,0" HorizontalAlignment="Left" 
                                           VerticalAlignment="Center" Visibility="Collapsed" FontSize="22" FontStyle="Italic"
                                           IsHitTestVisible="False">
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <DataTemplate x:Key="ItemTemplate" >
        <Border BorderBrush="#FFE3E9EF" BorderThickness=".3">
            <Grid Margin="5,10,5,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"  ></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <CheckBox Name="CheckBox"  IsChecked="{Binding IsChecked,Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Visibility="{Binding IsReadOnly, Mode=OneWay ,Converter={StaticResource BoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                       Command="{Binding DataContext.OnCheckedCommand,
                              RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" 
                       >
                <CheckBox.Style>
                    <Style  TargetType="CheckBox" >
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="CheckBox">
                                    <Grid HorizontalAlignment="Left" 
                                          Height="30" 
                                          VerticalAlignment="Top" 
                                          Width="30">
                                        <Ellipse Fill="White" StrokeThickness=".8" Stroke="#bddad5"
                                                 HorizontalAlignment="Stretch"
                                                 VerticalAlignment="Stretch" />
                                        <Path Data="M72 25L42 71 27 56l-4 4 20 20 34-52z"
                                              Margin="6"
                                              Fill="#5dc2af" 
                                              Name="Path"
                                              Stretch="Fill" 
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="false">
                                            <Setter TargetName="Path" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </CheckBox.Style>
            </CheckBox>
            <TextBox Name="TextBox" Grid.Column="1" BorderThickness="0" TextWrapping="Wrap" FontSize="20"
                     Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" VerticalAlignment="Center"
                     >

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding DataContext.EditCommand,
                              RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" 
                                               CommandParameter="{Binding}"
                                               />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TextBox.InputBindings>
                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding DataContext.DoubleClickCommand,
                              RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                  CommandParameter="{Binding}">
                    </MouseBinding>
                    <KeyBinding Command="{Binding Path=DataContext.EscapeCommand, 
                              RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                CommandParameter="{Binding}"
                                    Key="Escape"/>
                    <KeyBinding Command="{Binding Path=DataContext.EditCommand, 
                              RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                CommandParameter="{Binding}"
                                    Key="Return"/>
                </TextBox.InputBindings>
            </TextBox>
            <Button Grid.Column="2" Name="Button" Visibility="Collapsed"   FontSize="20" FontWeight="Bold"
                        Margin="0,0,5,0"
                        Command="{Binding DataContext.DeleteItemCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                        CommandParameter="{Binding}"  >x
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#af5b5e"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground" Value="#cc9a9a"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        </Border>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Button" Property="Visibility" Value="Visible"></Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsMouseOver" Value="true"></Condition>
                    <Condition SourceName="CheckBox"  Property="Visibility" Value="Hidden"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="Button" Property="Visibility" Value="Collapsed" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="CheckBox"  Property="IsChecked" Value="True"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="TextBox" Property="Foreground" Value="#d9d9d9" />
                    <Setter TargetName="TextBox" Property="TextDecorations" Value="Strikethrough" />
                </MultiTrigger.Setters>
            </MultiTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>


    <Style x:Key="LayoutRootStyle" TargetType="Grid">
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Width" Value="550"></Setter>
    </Style>

    <Style x:Key="WhiteBackgroundGridStyle" TargetType="Grid">
        <Setter Property="Background" Value="White"></Setter>
    </Style>
    
    

    <Style x:Key="FilterGridStyle" TargetType="Grid">
        <Setter Property="Margin" Value="0,10,0,5"></Setter>
    </Style>

    <Style x:Key="FilterButtonStyle" TargetType="ToggleButton">
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="{StaticResource FilterFontSize}"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger  Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="#f7eaea"></Setter>
            </Trigger>
            <Trigger  Property="IsChecked" Value="true">
                <Setter Property="BorderBrush" Value="#efd5d5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DeleteTextBlockStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="{StaticResource FilterFontSize}"/>
        <Style.Triggers>
            <Trigger  Property="IsMouseOver" Value="true">
                <Setter  Property="TextDecorations" Value="Underline"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FooterLabelStyle" TargetType="Label">
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="#bfbfbf"></Setter>
        <Setter Property="FontSize" Value="10"></Setter>
        <Setter Property="Padding" Value="0,5,5,0"></Setter>
    </Style>
    
    <Style x:Key="CheckAllCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Margin" Value="3,0,0,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid HorizontalAlignment="Left" 
                                          Height="40" 
                                          VerticalAlignment="Top" 
                                          Width="40">
                        <Path Data="m277.378998,227.865967l10.661102,-10.664841l29.205933,29.202118l48.685333,-48.670242l10.664886,10.657333l-59.35022,59.342667" 
                                              Margin="6"
                                              Fill="#e6e6e6" 
                                              Name="Path"
                                              Stretch="Fill" 
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#737373"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Path" Property="Fill" Value="#e6e6e6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>